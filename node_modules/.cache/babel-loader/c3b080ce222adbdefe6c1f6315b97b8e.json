{"ast":null,"code":"var _jsxFileName = \"/home/alkas/TMZ/BMI_task_React/bmi-calculator/src/props/form.js\";\nimport React from 'react';\nimport '../App.css';\nimport Buttonz from '../props/Buttonz';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Formz extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.weightChange = weightValue => {\n      this.setState({\n        weight: weightValue.target.value\n      });\n    };\n\n    this.heightChange = heightValue => {\n      this.setState({\n        height: heightValue.target.value\n      });\n      console.log(heightValue.target.value);\n    };\n\n    this.handleChange = () => {\n      this.setState({\n        name: ''\n      });\n      this.setState({\n        age: ''\n      });\n    };\n\n    this.computeBmi = () => {\n      let bmiValue = this.state.weight / (this.state.height * this.state.height);\n      this.setState({\n        bmi: bmiValue\n      });\n      let bmiClass = this.getBmi(bmiValue);\n      this.setState({\n        bmiClass: bmiClass\n      });\n      this.setState({\n        weight: \"\"\n      });\n      this.setState({\n        height: \"\"\n      });\n      console.log(\"bmiValue : \" + bmiValue);\n      console.log(\"bmiClass : \" + bmiClass);\n    };\n\n    this.state = {};\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"h2-style\",\n          children: \"BMI CALCULATOR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \\u2003  \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Name\",\n            name: \"name\",\n            onChange: this.handleChange,\n            value: this.state.name,\n            size: \"25\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 33\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \\u2003  \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Age\",\n            name: \"age\",\n            onChange: this.handleChange,\n            value: this.state.age,\n            size: \"25\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 33\n          }, this), \" \\u2002 years \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \\u2003  \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter your height\",\n            name: \"height\",\n            onChange: this.heightChange,\n            value: this.state.height,\n            size: \"25\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 33\n          }, this), \" \\u2002 m \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \\u2003  \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter your weight\",\n            name: \"weight\",\n            onChange: this.weightChange,\n            value: this.state.weight,\n            size: \"25\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 33\n          }, this), \" \\u2002 kg\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Buttonz, {\n          label: \"SUBMIT\",\n          onClick: this.computeBmi\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 73\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: isNaN(this.state.bmi) ? null : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Your BMI = \", this.state.bmi]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 60\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            color: 'red'\n          },\n          children: this.state.bmiClass\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: this.getBmiImage(this.state.bmiClass),\n          alt: \"bmiimage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  }\n\n  getBmi(bmi) {\n    if (bmi < 20) {\n      return \"Underweight\";\n    }\n\n    if (bmi >= 20 && bmi < 25) {\n      return \"Normal weight\";\n    }\n\n    if (bmi >= 25 && bmi < 30) {\n      return \"Overweight\";\n    }\n\n    if (bmi >= 30) {\n      return \"Obese\";\n    }\n  }\n\n  getBmiImage(bmiImg) {\n    switch (bmiImg) {\n      case 'Normal weight':\n        return 'normalweight.jpg';\n\n      case 'foo':\n        return 'obesity.jpg';\n\n      case 'Overweight':\n        return 'over-weight.png';\n\n      case 'Underweight':\n        return 'underweight.jpg';\n\n      default:\n        return 'oops';\n    }\n  }\n\n}\n\nexport default Formz;","map":{"version":3,"sources":["/home/alkas/TMZ/BMI_task_React/bmi-calculator/src/props/form.js"],"names":["React","Buttonz","Formz","Component","constructor","props","weightChange","weightValue","setState","weight","target","value","heightChange","heightValue","height","console","log","handleChange","name","age","computeBmi","bmiValue","state","bmi","bmiClass","getBmi","render","isNaN","color","getBmiImage","bmiImg"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport '../App.css';\nimport Buttonz from '../props/Buttonz';\n\nclass Formz extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        }\n    }\n\n    weightChange = (weightValue) => {\n        this.setState({ weight: weightValue.target.value });\n    }\n\n\n\n    heightChange = (heightValue) => {\n        this.setState({ height: heightValue.target.value });\n        console.log(heightValue.target.value)\n    }\n\n    handleChange = () => {\n        this.setState({name : ''})\n        this.setState({age : ''})\n    }\n    \n\n\n    render() {\n        return (\n            <div>\n\n                <label>\n                    <h2 className=\"h2-style\">BMI CALCULATOR</h2>\n                    <p> &emsp;  <input type=\"text\" placeholder=\"Name\" name=\"name\" onChange={this.handleChange} value = {this.state.name} size=\"25\" /> </p>\n                    <p> &emsp;  <input type=\"text\" placeholder=\"Age\" name=\"age\" onChange={this.handleChange}  value = {this.state.age} size=\"25\"/> &ensp; years </p>\n                    <p> &emsp;  <input type=\"text\" placeholder=\"Enter your height\" name=\"height\" onChange={this.heightChange} value = {this.state.height} size=\"25\"/> &ensp; m </p>\n                    <p> &emsp;  <input type=\"text\" placeholder=\"Enter your weight\" name=\"weight\" onChange={this.weightChange} value = {this.state.weight} size=\"25\" /> &ensp; kg</p>\n                    <Buttonz label=\"SUBMIT\" onClick={this.computeBmi} /><br></br>\n                    <div>\n                        {\n                            isNaN(this.state.bmi) ? null : <p>Your BMI = {this.state.bmi}</p>\n                        }\n\n                    </div>\n                    <h4 style={{ color: 'red' }} >{this.state.bmiClass}</h4>\n                    <div>\n                    </div>\n                    <img src={this.getBmiImage(this.state.bmiClass)} alt=\"bmiimage\"></img>\n                    <div>\n\n                    </div>\n                </label>\n            </div>\n\n        )\n    }\n    computeBmi = () => {\n\n        let bmiValue = (this.state.weight / (this.state.height * this.state.height));\n        this.setState({ bmi: bmiValue });\n        let bmiClass = this.getBmi(bmiValue);\n        this.setState({ bmiClass: bmiClass });\n        this.setState({ weight: \"\" });\n        this.setState({ height: \"\" });\n        console.log(\"bmiValue : \" + bmiValue);\n        console.log(\"bmiClass : \" + bmiClass);\n    }\n\n    getBmi(bmi) {\n        if (bmi < 20) {\n            return \"Underweight\";\n        }\n        if (bmi >= 20 && bmi < 25) {\n            return \"Normal weight\";\n        }\n        if (bmi >= 25 && bmi < 30) {\n            return \"Overweight\";\n        }\n        if (bmi >= 30) {\n            return \"Obese\";\n        }\n    }\n\n    getBmiImage(bmiImg) {\n        switch(bmiImg) {\n            case 'Normal weight':\n              return 'normalweight.jpg';\n              case 'foo':\n              return 'obesity.jpg';\n              case 'Overweight':\n              return 'over-weight.png';\n              case 'Underweight':\n              return 'underweight.jpg';\n            default:\n              return 'oops';\n          }\n    }\n}\n\n\n\nexport default Formz;\n\n\n\n"]},"metadata":{},"sourceType":"module"}