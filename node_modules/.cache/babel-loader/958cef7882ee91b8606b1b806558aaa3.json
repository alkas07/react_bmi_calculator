{"ast":null,"code":"var _jsxFileName = \"/home/alkas/TMZ/BMI_task_React/bmi-calculator/src/props/form.js\";\nimport React from 'react';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Formz extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.weightChange = weightValue => {\n      this.setState({\n        weight: weightValue\n      });\n    };\n\n    this.heightChange = heightValue => {\n      this.setState({\n        height: heightValue\n      });\n      console.log(heightValue.target.name);\n      console.log(heightValue.target.value);\n    };\n\n    this.state = {}; // ...\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"input-group\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"h2-style\",\n            children: \"BMI CALCULATOR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \\u2003  \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"NAME\",\n              name: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 37\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \\u2003  \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"AGE\",\n              name: \"age\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 37\n            }, this), \" \\u2002 years \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \\u2003  \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"HEIGHT\",\n              name: \"height\",\n              onChange: this.heightChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 37\n            }, this), \" \\u2002 m \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \\u2003  \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"WEIGHT\",\n              name: \"weight\",\n              onChange: this.weightChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 37\n            }, this), \" \\u2002 kg\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 135\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 144\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: isNaN(this.state.bmiValue) ? null : /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Your BMI = \", this.state.bmiValue]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: this.state.bmiClass\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n\n  computeBmi() {\n    console.log(\"weight : \" + this.state.weight);\n    console.log(\"height : \" + this.state.height);\n    let bmiValue = this.state.weight / this.state.height / this.state.height;\n    this.setState({\n      bmi: bmiValue\n    });\n    let bmiClass = this.getBmi(bmiValue);\n    this.setState({\n      bmiClass: bmiClass\n    });\n    console.log(\"bmiValue : \" + bmiValue);\n    console.log(\"bmiClass : \" + bmiClass);\n  }\n\n  getBmi(bmi) {\n    if (bmi < 18.5) {\n      return \"Underweight\";\n    }\n\n    if (bmi >= 18.5 && bmi < 24.9) {\n      return \"Normal weight\";\n    }\n\n    if (bmi >= 25 && bmi < 29.9) {\n      return \"Overweight\";\n    }\n\n    if (bmi >= 30) {\n      return \"Obesity\";\n    }\n  }\n\n}\n\nexport default Formz;","map":{"version":3,"sources":["/home/alkas/TMZ/BMI_task_React/bmi-calculator/src/props/form.js"],"names":["React","Formz","Component","constructor","props","weightChange","weightValue","setState","weight","heightChange","heightValue","height","console","log","target","name","value","state","render","isNaN","bmiValue","bmiClass","computeBmi","bmi","getBmi"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport '../App.css';\n\nclass Formz extends React.Component {\n\n    constructor(props) {\n    super(props);    this.state = { \n\n    };\n  \n  // ...\n}\n    \n    weightChange = (weightValue) => {\n        this.setState({ weight : weightValue });\n    }\n\n   \n    \n    heightChange = (heightValue) => {\n        this.setState({ height:  heightValue });\n        console.log(heightValue.target.name)\n        console.log(heightValue.target.value)\n    }\n\n\n    render() {\n        return (\n            <div class=\"input-group\">\n                <form>\n                    <label>\n                        <h2 className=\"h2-style\">BMI CALCULATOR</h2>\n                        <p> &emsp;  <input type=\"text\" placeholder=\"NAME\" name=\"name\" /> </p>\n                        <p> &emsp;  <input type=\"text\" placeholder=\"AGE\" name=\"age\" /> &ensp; years </p>\n                        <p> &emsp;  <input type=\"text\" placeholder=\"HEIGHT\" name=\"height\" onChange={this.heightChange}/> &ensp; m </p>\n                        <p> &emsp;  <input type=\"text\" placeholder=\"WEIGHT\" name=\"weight\" onChange={this.weightChange}/> &ensp; kg</p><br></br><br></br>\n                        \n                    </label>\n                    \n      <div>\n        {\n          isNaN(this.state.bmiValue)?null:<h3>Your BMI = {this.state.bmiValue}</h3> \n        }\n        \n      </div>\n      <div>\n        <h3>{this.state.bmiClass}</h3>\n      </div>\n                </form>\n            </div>\n\n            \n\n        )\n    }\n    computeBmi() {\n    \n        console.log(\"weight : \" +this.state.weight);\n        console.log(\"height : \" +this.state.height);\n        let bmiValue = ( this.state.weight / this.state.height) / this.state.height;\n        this.setState({ bmi : bmiValue });\n        let bmiClass = this.getBmi(bmiValue);\n        this.setState({ bmiClass : bmiClass });\n        console.log(\"bmiValue : \" +bmiValue);\n        console.log(\"bmiClass : \" +bmiClass);\n    }\n\n    getBmi(bmi) {\n        if(bmi < 18.5) {\n            return \"Underweight\";\n        }\n        if(bmi >= 18.5 && bmi < 24.9) {\n            return \"Normal weight\";\n        }\n        if(bmi >= 25 && bmi < 29.9) {\n            return \"Overweight\";\n        }\n        if(bmi >= 30) {\n            return \"Obesity\";\n        }\n    }\n}\n\n\n\nexport default Formz;\n\n\n\n"]},"metadata":{},"sourceType":"module"}