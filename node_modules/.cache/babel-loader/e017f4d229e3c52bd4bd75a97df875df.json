{"ast":null,"code":"var _jsxFileName = \"/home/alkas/TMZ/BMI_task_React/bmi-calculator/src/props/form.js\";\nimport React from 'react';\nimport '../App.css';\nimport Buttonz from '../props/Buttonz';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Formz extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.weightChange = weightValue => {\n      this.setState({\n        weight: weightValue.target.value\n      });\n    };\n\n    this.heightChange = heightValue => {\n      this.setState({\n        height: heightValue.target.value\n      });\n      console.log(heightValue.target.value);\n    };\n\n    this.computeBmi = () => {\n      console.log(\"wgt : \" + this.state.weight);\n      let bmiValue = this.state.weight / (this.state.height * this.state.height);\n      console.log(\"bmiValue : \" + bmiValue);\n      this.setState({\n        bmi: bmiValue\n      });\n      let bmiClass = this.getBmi(bmiValue);\n      this.setState({\n        bmiClass: bmiClass\n      });\n      this.setState({\n        weight: \"\"\n      });\n      this.setState({\n        height: \"\"\n      });\n      console.log(\"bmiValue : \" + bmiValue);\n      console.log(\"bmiClass : \" + bmiClass);\n    };\n\n    this.state = {};\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"input-group\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"h2-style\",\n            children: \"BMI CALCULATOR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \\u2003  \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Name\",\n              name: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 37\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \\u2003  \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Age\",\n              name: \"age\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 37\n            }, this), \" \\u2002 years \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \\u2003  \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Enter your height\",\n              name: \"height\",\n              onChange: this.heightChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 37\n            }, this), \" \\u2002 m \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \\u2003  \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Enter your weight\",\n              name: \"weight\",\n              onChange: this.weightChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 37\n            }, this), \" \\u2002 kg\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 146\n          }, this), /*#__PURE__*/_jsxDEV(Buttonz, {\n            label: \"SUBMIT\",\n            onClick: this.computeBmi\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: isNaN(this.state.bmiValue) ? null : /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Your BMI = \", this.state.bmiValue]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: this.state.bmiClass\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"End \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  }\n\n  getBmi(bmi) {\n    if (bmi < 18.5) {\n      return \"Underweight\";\n    }\n\n    if (bmi >= 18.5 && bmi < 24.9) {\n      return \"Normal weight\";\n    }\n\n    if (bmi >= 25 && bmi < 29.9) {\n      return \"Overweight\";\n    }\n\n    if (bmi >= 30) {\n      return \"Obesity\";\n    }\n  }\n\n}\n\nexport default Formz;","map":{"version":3,"sources":["/home/alkas/TMZ/BMI_task_React/bmi-calculator/src/props/form.js"],"names":["React","Buttonz","Formz","Component","constructor","props","weightChange","weightValue","setState","weight","target","value","heightChange","heightValue","height","console","log","computeBmi","state","bmiValue","bmi","bmiClass","getBmi","render","isNaN"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport '../App.css';\nimport Buttonz from '../props/Buttonz';\n\nclass Formz extends React.Component {\n\n    constructor(props) {\n    super(props);  \n    this.state = { \n        \n    }\n}\n    \n    weightChange = (weightValue) => {\n        this.setState({ weight : weightValue.target.value });\n        }\n\n   \n    \n    heightChange = (heightValue) => {\n        this.setState({ height:  heightValue.target.value });\n        console.log(heightValue.target.value)\n    }\n\n\n    render() {\n        return (\n            <div class=\"input-group\">\n                <form>\n                    <label>\n                        <h2 className=\"h2-style\">BMI CALCULATOR</h2>\n                        <p> &emsp;  <input type=\"text\" placeholder=\"Name\" name=\"name\" /> </p>\n                        <p> &emsp;  <input type=\"text\" placeholder=\"Age\" name=\"age\" /> &ensp; years </p>\n                        <p> &emsp;  <input type=\"text\" placeholder=\"Enter your height\" name=\"height\" onChange={this.heightChange}/> &ensp; m </p>\n                        <p> &emsp;  <input type=\"text\" placeholder=\"Enter your weight\" name=\"weight\" onChange={this.weightChange}/> &ensp; kg</p><br></br>\n                        <Buttonz label=\"SUBMIT\" onClick={ this.computeBmi } />\n            \n                    \n                    <div>\n                    {\n          isNaN(this.state.bmiValue)?null:<h3>Your BMI = {this.state.bmiValue}</h3> \n        }\n        \n        \n      </div>\n      <div>\n        <h3>{this.state.bmiClass}</h3>\n      </div>\n      <h1>End </h1>   \n      </label>\n                    </form>     \n      </div>\n\n    )\n    }\n    computeBmi = () => {\n\n        console.log(\"wgt : \" +this.state.weight);\n\n        let bmiValue = ( this.state.weight / (this.state.height * this.state.height));\n        console.log(\"bmiValue : \" +bmiValue);\n        this.setState({ bmi : bmiValue });\n        let bmiClass = this.getBmi(bmiValue);\n        this.setState({ bmiClass : bmiClass });\n        this.setState({ weight :\"\" });\n        this.setState({ height :\"\" });\n        console.log(\"bmiValue : \" +bmiValue);\n        console.log(\"bmiClass : \" +bmiClass);\n    }\n\n    getBmi(bmi) {\n        if(bmi < 18.5) {\n            return \"Underweight\";\n        }\n        if(bmi >= 18.5 && bmi < 24.9) {\n            return \"Normal weight\";\n        }\n        if(bmi >= 25 && bmi < 29.9) {\n            return \"Overweight\";\n        }\n        if(bmi >= 30) {\n            return \"Obesity\";\n        }\n    }\n}\n\n\n\nexport default Formz;\n\n\n\n"]},"metadata":{},"sourceType":"module"}