{"ast":null,"code":"var _jsxFileName = \"/home/alkas/TMZ/BMI_task_React/bmi-calculator/src/props/form.js\";\nimport React from 'react';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Formz extends React.Component {\n  constructor(props) {\n    super(props);\n    this.weightChange = this.weightChange.bind(this);\n    this.heightChange = this.heightChange.bind(this);\n  }\n\n  weightChanged(weightValue) {\n    this.setState({\n      weight: weightValue\n    });\n  }\n\n  heightChanged(heightValue) {\n    this.setState({\n      height: heightValue\n    });\n  }\n\n  computeBmi() {\n    let bmiValue = this.state.weight / this.state.height / this.state.height;\n    this.setState({\n      bmi: bmiValue\n    });\n    let bmiClass = this.getBmi(bmiValue);\n    this.setState({\n      bmiClass: bmiClass\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"input-group\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"h2-style\",\n            children: \"BMI CALCULATOR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \\u2003  \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"NAME\",\n              name: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 37\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \\u2003  \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"AGE\",\n              name: \"age\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 37\n            }, this), \" \\u2002 years \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \\u2003  \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"HEIGHT\",\n              name: \"height\",\n              onChange: this.heightChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 37\n            }, this), \" \\u2002 m \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \\u2003  \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"WEIGHT\",\n              name: \"weight\",\n              onChange: this.weightChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 37\n            }, this), \" \\u2002 kg\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 135\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 144\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            label: \"CALCULATE\",\n            onClick: computeBmi\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: isNaN(bmi) ? null : /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Your BMI = \", bmi]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: bmiClass\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  }\n\n  getBmi(bmi) {\n    if (bmi < 18.5) {\n      return \"Underweight\";\n    }\n\n    if (bmi >= 18.5 && bmi < 24.9) {\n      return \"Normal weight\";\n    }\n\n    if (bmi >= 25 && bmi < 29.9) {\n      return \"Overweight\";\n    }\n\n    if (bmi >= 30) {\n      return \"Obesity\";\n    }\n  }\n\n}\n\nexport default Formz;","map":{"version":3,"sources":["/home/alkas/TMZ/BMI_task_React/bmi-calculator/src/props/form.js"],"names":["React","Formz","Component","constructor","props","weightChange","bind","heightChange","weightChanged","weightValue","setState","weight","heightChanged","heightValue","height","computeBmi","bmiValue","state","bmi","bmiClass","getBmi","render","isNaN"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport '../App.css';\n\nclass Formz extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.weightChange = this.weightChange.bind(this);\n        this.heightChange = this.heightChange.bind(this);\n    }\n    \n    weightChanged(weightValue) {\n        this.setState({ weight : weightValue });\n    }\n    \n    heightChanged(heightValue) {\n        this.setState({ height:  heightValue });\n    }\n\n    computeBmi() {\n        let bmiValue = ( this.state.weight / this.state.height) / this.state.height;\n        this.setState({ bmi : bmiValue });\n        let bmiClass = this.getBmi(bmiValue);\n        this.setState({ bmiClass : bmiClass });\n    }\n\n\n    render() {\n        return (\n            <div class=\"input-group\">\n                <form>\n                    <label>\n                        <h2 className=\"h2-style\">BMI CALCULATOR</h2>\n                        <p> &emsp;  <input type=\"text\" placeholder=\"NAME\" name=\"name\" /> </p>\n                        <p> &emsp;  <input type=\"text\" placeholder=\"AGE\" name=\"age\" /> &ensp; years </p>\n                        <p> &emsp;  <input type=\"text\" placeholder=\"HEIGHT\" name=\"height\" onChange={this.heightChange}/> &ensp; m </p>\n                        <p> &emsp;  <input type=\"text\" placeholder=\"WEIGHT\" name=\"weight\" onChange={this.weightChange}/> &ensp; kg</p><br></br><br></br>\n                        \n                    </label>\n                    <div className=\"row\">\n        <Button label=\"CALCULATE\" onClick={computeBmi} />\n      </div>\n      <div className=\"row\">\n        {\n          isNaN(bmi)?null:<h3>Your BMI = {bmi}</h3> \n        }\n        \n      </div>\n      <div className=\"row\">\n        <h3>{bmiClass}</h3>\n      </div>\n                </form>\n            </div>\n\n            \n\n        )\n    }\n\n\n    getBmi(bmi) {\n        if(bmi < 18.5) {\n            return \"Underweight\";\n        }\n        if(bmi >= 18.5 && bmi < 24.9) {\n            return \"Normal weight\";\n        }\n        if(bmi >= 25 && bmi < 29.9) {\n            return \"Overweight\";\n        }\n        if(bmi >= 30) {\n            return \"Obesity\";\n        }\n    }\n}\n\n\n\nexport default Formz;\n\n\n\n"]},"metadata":{},"sourceType":"module"}